This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
.gitignore
eslint.config.js
index.html
package.json
public/vite.svg
README.md
src/App.tsx
src/assets/channels.svg
src/assets/communities.svg
src/assets/config.svg
src/assets/delivered.svg
src/assets/menu.svg
src/assets/message.svg
src/assets/new-chat.svg
src/assets/pending.svg
src/assets/plus.svg
src/assets/search.svg
src/assets/send.svg
src/assets/sent.svg
src/assets/status.svg
src/assets/user.svg
src/components/IconButton.tsx
src/index.css
src/layouts/Chat/Bottom.tsx
src/layouts/Chat/Header.tsx
src/layouts/Chat/index.tsx
src/layouts/Chat/Message.tsx
src/layouts/Chat/ScrollArea.tsx
src/layouts/Contacts/Header.tsx
src/layouts/Contacts/index.tsx
src/layouts/Contacts/List.tsx
src/layouts/Contacts/ListHeader.tsx
src/layouts/Contacts/ScrollArea.tsx
src/layouts/Header.tsx
src/main.tsx
src/types/contact.ts
src/types/message.ts
src/types/svg.d.ts
src/vite-env.d.ts
tailwind.config.cjs
tsconfig.app.json
tsconfig.json
tsconfig.node.json
vite.config.ts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="eslint.config.js">
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import tseslint from 'typescript-eslint'

export default tseslint.config(
  { ignores: ['dist'] },
  {
    extends: [js.configs.recommended, ...tseslint.configs.recommended],
    files: ['**/*.{ts,tsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
)
</file>

<file path="index.html">
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React + TS</title>
    <style></style>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
</file>

<file path="package.json">
{
  "name": "client",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@tailwindcss/vite": "^4.0.14",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "tailwindcss": "^4.0.14",
    "vite-plugin-svgr": "^4.3.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@vitejs/plugin-react-swc": "^3.8.0",
    "eslint": "^9.21.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "typescript": "~5.7.2",
    "typescript-eslint": "^8.24.1",
    "vite": "^6.2.0",
    "vite-tsconfig-paths": "^5.1.4"
  }
}
</file>

<file path="public/vite.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
</file>

<file path="README.md">
# React + TypeScript + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend updating the configuration to enable type-aware lint rules:

```js
export default tseslint.config({
  extends: [
    // Remove ...tseslint.configs.recommended and replace with this
    ...tseslint.configs.recommendedTypeChecked,
    // Alternatively, use this for stricter rules
    ...tseslint.configs.strictTypeChecked,
    // Optionally, add this for stylistic rules
    ...tseslint.configs.stylisticTypeChecked,
  ],
  languageOptions: {
    // other options...
    parserOptions: {
      project: ['./tsconfig.node.json', './tsconfig.app.json'],
      tsconfigRootDir: import.meta.dirname,
    },
  },
})
```

You can also install [eslint-plugin-react-x](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-x) and [eslint-plugin-react-dom](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-dom) for React-specific lint rules:

```js
// eslint.config.js
import reactX from 'eslint-plugin-react-x'
import reactDom from 'eslint-plugin-react-dom'

export default tseslint.config({
  plugins: {
    // Add the react-x and react-dom plugins
    'react-x': reactX,
    'react-dom': reactDom,
  },
  rules: {
    // other rules...
    // Enable its recommended typescript rules
    ...reactX.configs['recommended-typescript'].rules,
    ...reactDom.configs.recommended.rules,
  },
})
```
</file>

<file path="src/App.tsx">
import type { IContact }from "@types/contact"
import Header from "@layouts/Header";
import Contacts from "@layouts/Contacts";
import Chat from "@layouts/Chat";
import { useState } from "react";

const contacts: IContact[] = [
 {
  id: 1,
  name: "John Doe",
  avatar: null,
 },
 {
  id: 1,
  name: "Mac Miller",
  avatar: "https://i.pravatar.cc/100?img=1",
 },
 {
  id: 1,
  name: "Kendrick Lamar",
  avatar: "https://i.pravatar.cc/100?img=2",
 },

]

function App() {
  const [selectedContact, setSelectedContact] = useState<IContact[] | null>(null);

  return (
    <div className="h-screen w-full bg-background flex items-center justify-center font-system">
      <div className="flex top-[19px] w-[calc(100%-38px)] max-w-[1600px] h-[calc(100%-38px)]">
        <Header />
        <Contacts />
        <Chat />
      </div>
    </div>
  );
}

export default App;
</file>

<file path="src/assets/channels.svg">
<svg viewBox="0 0 24 24" height="24" width="24" preserveAspectRatio="xMidYMid meet" class="" fill="none"><title>newsletter-outline</title><path fill-rule="evenodd" clip-rule="evenodd" d="M15.8301 8.63404C16.3081 8.35745 16.9198 8.52076 17.1964 8.9988C17.7077 9.88244 18 10.9086 18 12C18 13.0914 17.7077 14.1176 17.1964 15.0012C16.9198 15.4792 16.3081 15.6425 15.8301 15.366C15.352 15.0894 15.1887 14.4776 15.4653 13.9996C15.8052 13.4122 16 12.7304 16 12C16 11.2696 15.8052 10.5878 15.4653 10.0004C15.1887 9.52237 15.352 8.91063 15.8301 8.63404ZM8.16995 8.63404C8.64798 8.91063 8.81129 9.52237 8.5347 10.0004C8.19484 10.5878 8 11.2696 8 12C8 12.7304 8.19484 13.4122 8.5347 13.9996C8.81129 14.4776 8.64798 15.0894 8.16995 15.366C7.69191 15.6425 7.08017 15.4792 6.80358 15.0012C6.29231 14.1176 6 13.0914 6 12C6 10.9086 6.29231 9.88244 6.80358 8.9988C7.08017 8.52076 7.69191 8.35745 8.16995 8.63404Z" fill="currentColor"></path><path d="M13.5 12C13.5 12.8284 12.8284 13.5 12 13.5C11.1716 13.5 10.5 12.8284 10.5 12C10.5 11.1716 11.1716 10.5 12 10.5C12.8284 10.5 13.5 11.1716 13.5 12Z" fill="currentColor"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M5.33243 16.4826L5.09622 17.2728C4.86428 18.0487 4.62086 18.8707 4.41748 19.5825C5.12931 19.3791 5.95126 19.1357 6.72722 18.9038L7.51743 18.6676L8.24444 19.057C9.36447 19.6571 10.6412 20 12 20C16.4154 20 20 16.4154 20 12C20 7.58457 16.4154 4 12 4C7.58457 4 4 7.58457 4 12C4 13.3588 4.34295 14.6355 4.94296 15.7556L5.33243 16.4826ZM3.18 16.7C2.63 18.54 2 20.69 2 21C2 21.55 2.45 22 3 22C3.31 22 5.46 21.37 7.3 20.82C8.7 21.57 10.3 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2C6.48 2 2 6.48 2 12C2 13.7 2.43 15.3 3.18 16.7Z" fill="currentColor"></path></svg>
</file>

<file path="src/assets/communities.svg">
<svg viewBox="0 0 24 24" height="24" width="24" preserveAspectRatio="xMidYMid meet" class="" fill="none"><title>community-outline</title><path d="M19.992 17C20.0031 16.2628 20.0099 15.9937 19.9606 15.4041C19.9559 15.347 19.9506 15.2962 19.9447 15.253C19.9007 14.9282 19.8237 14.6238 19.7226 14.3419C19.68 14.2233 19.6332 14.1094 19.5828 13.9999C19.5738 13.9805 19.5647 13.9611 19.5555 13.942C19.4612 13.7454 19.355 13.5636 19.2404 13.3956C19.3264 13.392 19.4137 13.3898 19.5023 13.3892L19.5555 13.389C20.2632 13.389 20.8883 13.4899 21.401 13.6205C21.4627 13.6362 21.5228 13.6523 21.5813 13.6688L21.5915 13.6717L21.6087 13.6766C22.069 13.8088 22.5875 14.0227 23.0245 14.3595C23.4788 14.7097 23.8921 15.2338 23.9736 15.9559C24.0117 16.2932 24 16.0153 23.9908 16.4244C23.9744 17.1535 23.3769 19 22.6608 19H19.6869C19.8643 18.6252 19.9692 17.9298 19.9822 17.4856C19.985 17.3925 19.9887 17.2199 19.992 17Z" fill="currentColor"></path><path d="M2.41872 13.6688C2.47715 13.6524 2.53726 13.6362 2.599 13.6205C3.11171 13.49 3.73676 13.389 4.44446 13.389L4.49762 13.3892C4.58626 13.3899 4.67357 13.3921 4.7595 13.3957C4.64492 13.5637 4.53872 13.7455 4.44444 13.942C4.43524 13.9612 4.42615 13.9805 4.41718 14C4.36671 14.1094 4.31992 14.2234 4.27738 14.342C4.17628 14.6239 4.09928 14.9283 4.05525 15.253C4.04938 15.2963 4.04409 15.347 4.03932 15.4041C3.99008 15.9938 3.99682 16.2629 4.00795 17C4.01127 17.22 4.01498 17.3926 4.01771 17.4857C4.03074 17.9298 4.13562 18.6252 4.31303 19H1.33916C0.623061 19 0.0256195 18.1535 0.00922726 17.4245C2.95136e-05 17.0154 -0.0117388 16.2932 0.0263682 15.9559C0.107939 15.2339 0.521192 14.7098 0.975466 14.3596C1.41245 14.0228 1.9309 13.8088 2.39128 13.6766L2.40848 13.6717L2.41872 13.6688Z" fill="currentColor"></path><mask id="mask0_210_34" maskUnits="userSpaceOnUse" x="5" y="12" width="14" height="7" style="mask-type: alpha;"><path d="M6.37097 18.6728C6.22771 18.5403 6.10436 18.3762 6.00893 18.1973C5.88016 17.9559 5.80223 17.6876 5.79477 17.4335C5.77998 16.9291 5.757 15.9342 5.81696 15.4918C5.84373 15.2944 5.89027 15.111 5.95085 14.9421C6.02317 14.7405 6.11797 14.5597 6.2284 14.3977C6.44704 14.077 6.72693 13.8296 7.01492 13.6386C7.049 13.616 7.08319 13.5941 7.11741 13.5731C7.57939 13.2888 8.09607 13.1117 8.52836 12.9865C8.90312 12.878 9.34966 12.7693 9.85708 12.6823C10.4851 12.5746 11.2063 12.5001 12 12.5001C12.7938 12.5001 13.515 12.5746 14.143 12.6823C14.6504 12.7693 15.0969 12.878 15.4717 12.9865C15.904 13.1117 16.4207 13.2888 16.8826 13.5731C16.9169 13.5941 16.9511 13.616 16.9851 13.6386C17.2731 13.8296 17.553 14.077 17.7717 14.3977C17.8821 14.5597 17.9769 14.7405 18.0492 14.9421C18.1098 15.111 18.1563 15.2944 18.1831 15.4918C18.2431 15.9342 18.2201 16.9291 18.2053 17.4335C18.1978 17.6876 18.1199 17.9559 17.9911 18.1973C17.8957 18.3762 17.7723 18.5403 17.6291 18.6729C17.4139 18.872 17.1537 19 16.8757 19H7.12439C6.84638 19 6.5862 18.872 6.37097 18.6728Z" fill="#54656F"></path></mask><g mask="url(#mask0_210_34)"><path d="M7.56768 14.4719L7.56768 14.4719C7.59198 14.4558 7.61659 14.4401 7.64147 14.4248L7.64147 14.4248C7.98806 14.2115 8.4022 14.0641 8.80649 13.9471C9.14887 13.8479 9.55891 13.7481 10.0261 13.6679C10.6043 13.5688 11.2688 13.5001 12 13.5001C12.7313 13.5001 13.3957 13.5688 13.974 13.6679C14.4411 13.7481 14.8512 13.8479 15.1936 13.9471C15.5979 14.0641 16.012 14.2115 16.3586 14.4248L16.3586 14.4248C16.3835 14.4401 16.4081 14.4558 16.4324 14.4719L16.9811 13.6446L16.4324 14.4719C16.6396 14.6094 16.8159 14.771 16.9454 14.9609L17.7717 14.3977L16.9454 14.9609C17.0104 15.0564 17.0656 15.1617 17.1079 15.2797C17.1457 15.3851 17.1751 15.5004 17.1922 15.6261L18.1831 15.4918L17.1922 15.6262C17.2383 15.9667 17.2217 16.8608 17.2057 17.4042C17.2034 17.4827 17.1757 17.6012 17.1088 17.7266L17.9911 18.1973L17.1088 17.7266C17.0607 17.8168 17.0035 17.8893 16.9499 17.9389L17.6291 18.6729L16.9499 17.9389C16.9101 17.9757 16.8804 17.9925 16.8663 17.9989C16.8653 17.9993 16.8644 17.9997 16.8637 18H7.1364C7.13563 17.9997 7.13475 17.9993 7.13377 17.9989C7.11966 17.9925 7.08998 17.9757 7.05017 17.9389C6.99657 17.8893 6.93934 17.8168 6.89125 17.7266C6.82433 17.6012 6.79665 17.4827 6.79434 17.4042C6.77841 16.8608 6.76173 15.9667 6.8079 15.6262C6.82495 15.5004 6.85436 15.3851 6.89215 15.2797C6.93448 15.1617 6.98966 15.0564 7.05471 14.9609L6.30134 14.4474L7.05471 14.9609C7.18421 14.771 7.36045 14.6094 7.56768 14.4719Z" stroke="currentColor" stroke-width="2"></path></g><mask id="mask1_210_34" maskUnits="userSpaceOnUse" x="8" y="4" width="8" height="8" style="mask-type: alpha;"><path d="M9.91613 9.03805L9.10219 9.61901L9.91613 9.03805C9.86836 8.97113 9.82379 8.90186 9.78264 8.83049L8.91633 9.33L9.78264 8.83049C9.56772 8.45776 9.44434 8.02519 9.44434 7.56C9.44434 7.42212 9.45517 7.28739 9.47586 7.15644C9.66888 5.93473 10.7278 5 11.9999 5C13.2719 5 14.3309 5.93473 14.5239 7.15644C14.5446 7.28739 14.5554 7.42212 14.5554 7.56C14.5554 8.02519 14.432 8.45776 14.2171 8.83049C14.176 8.90186 14.1314 8.97113 14.0836 9.03805C13.8774 9.32698 13.6122 9.57121 13.306 9.75311C12.9248 9.97956 12.4793 10.11 11.9999 10.11C11.5204 10.11 11.0749 9.97956 10.6937 9.75311C10.3875 9.57121 10.1224 9.32698 9.91613 9.03805Z" stroke="currentColor" stroke-width="2"></path></mask><g mask="url(#mask1_210_34)"><path d="M15.0834 9.33C15.0261 9.42949 14.964 9.52593 14.8976 9.61901C14.6109 10.0206 14.2426 10.3599 13.8167 10.6129C13.285 10.9287 12.6637 11.11 11.9999 11.11C11.3361 11.11 10.7147 10.9287 10.183 10.6129C9.75719 10.3599 9.38885 10.0206 9.10219 9.61901C9.03575 9.52593 8.97369 9.42949 8.91633 9.33C8.61608 8.80927 8.44434 8.20499 8.44434 7.56C8.44434 7.36964 8.4593 7.18272 8.48811 7.00038C8.75647 5.30182 10.2266 4 11.9999 4C13.7732 4 15.2433 5.30182 15.5117 7.00038C15.5405 7.18272 15.5554 7.36964 15.5554 7.56C15.5554 8.20499 15.3837 8.80927 15.0834 9.33Z" fill="currentColor"></path></g><path d="M7.01994 10.0243C7.07943 9.80287 7.11115 9.57012 7.11115 9.33004C7.11115 8.65375 6.8594 8.03766 6.44449 7.56909C5.95586 7.01727 5.24095 6.67004 4.44449 6.67004C2.97174 6.67004 1.77783 7.85729 1.77783 9.33004C1.77783 10.232 2.22561 11.0306 2.91099 11.5142C3.34475 11.8202 3.87368 12 4.44449 12C4.57186 12 4.69716 11.9911 4.81976 11.9738C5.28441 11.9082 5.7106 11.7225 6.06612 11.4492C6.52468 11.0968 6.86567 10.5986 7.01994 10.0243Z" fill="currentColor"></path><path d="M17.934 11.4493C18.2895 11.7225 18.7157 11.9082 19.1803 11.9738C19.3029 11.9911 19.4282 12 19.5556 12C20.1264 12 20.6553 11.8202 21.0891 11.5141C21.7745 11.0306 22.2222 10.232 22.2222 9.33004C22.2222 7.85729 21.0283 6.67004 19.5556 6.67004C18.7591 6.67004 18.0442 7.01727 17.5556 7.56909C17.1407 8.03766 16.8889 8.65375 16.8889 9.33004C16.8889 9.57012 16.9206 9.80287 16.9801 10.0243C17.1344 10.5986 17.4754 11.0968 17.934 11.4493Z" fill="currentColor"></path></svg>
</file>

<file path="src/assets/config.svg">
<svg viewBox="0 0 24 24" height="24" width="24" preserveAspectRatio="xMidYMid meet" class="" fill="none"><title>settings-outline</title><path d="M11.75 14.5C13.1307 14.5 14.25 13.3807 14.25 12C14.25 10.6193 13.1307 9.5 11.75 9.5C10.3693 9.5 9.25 10.6193 9.25 12C9.25 13.3807 10.3693 14.5 11.75 14.5Z" stroke="currentColor" stroke-width="2"></path><mask id="mask0_226_11" maskUnits="userSpaceOnUse" x="2" y="2" width="20" height="20" style="mask-type: luminance;"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.87042 22H13.6204C13.8704 22 14.0871 21.9167 14.2704 21.75C14.4538 21.5833 14.5621 21.375 14.5954 21.125L14.8954 18.8C15.0954 18.7167 15.2954 18.6167 15.4954 18.5C15.6954 18.3833 15.8871 18.2583 16.0704 18.125L18.1954 19.025C18.4288 19.1083 18.6663 19.1125 18.9079 19.0375C19.1496 18.9625 19.3371 18.8167 19.4704 18.6L21.3204 15.4C21.4538 15.1833 21.4954 14.95 21.4454 14.7C21.3954 14.45 21.2704 14.25 21.0704 14.1L19.1954 12.675C19.2288 12.5583 19.2454 12.4458 19.2454 12.3375V11.6625C19.2454 11.5542 19.2371 11.4417 19.2204 11.325L21.0954 9.9C21.2954 9.75 21.4204 9.55 21.4704 9.3C21.5204 9.05 21.4788 8.81667 21.3454 8.6L19.4954 5.375C19.3621 5.15833 19.1788 5.01667 18.9454 4.95C18.7121 4.88333 18.4788 4.89167 18.2454 4.975L16.0704 5.875C15.8871 5.74167 15.6996 5.61667 15.5079 5.5C15.3163 5.38333 15.1121 5.28333 14.8954 5.2L14.5954 2.875C14.5621 2.625 14.4538 2.41667 14.2704 2.25C14.0871 2.08333 13.8704 2 13.6204 2H9.87042C9.62046 2 9.40379 2.08333 9.22046 2.25C9.03712 2.41667 8.92879 2.625 8.89546 2.875L8.59546 5.2C8.39546 5.28333 8.19546 5.38333 7.99546 5.5C7.79546 5.61667 7.60379 5.74167 7.42046 5.875L5.24546 4.975C5.01212 4.89167 4.77462 4.87917 4.53296 4.9375C4.29129 4.99583 4.11212 5.14167 3.99546 5.375L2.14546 8.6C2.01212 8.81667 1.97046 9.05 2.02046 9.3C2.07046 9.55 2.19546 9.75 2.39546 9.9L4.27046 11.325C4.25379 11.4417 4.24546 11.5542 4.24546 11.6625V12.3375C4.24546 12.4458 4.25379 12.5583 4.27046 12.675L2.39546 14.1C2.19546 14.25 2.07046 14.45 2.02046 14.7C1.97046 14.95 2.01212 15.1833 2.14546 15.4L3.99546 18.625C4.12879 18.8417 4.31212 18.9833 4.54546 19.05C4.77879 19.1167 5.01212 19.1083 5.24546 19.025L7.42046 18.125C7.60379 18.2583 7.79129 18.3833 7.98296 18.5C8.17462 18.6167 8.37879 18.7167 8.59546 18.8L8.89546 21.125C8.92879 21.375 9.03712 21.5833 9.22046 21.75C9.40379 21.9167 9.62046 22 9.87042 22Z" fill="white"></path></mask><g mask="url(#mask0_226_11)"><path d="M14.5954 21.125L16.5779 21.3893L16.579 21.3809L14.5954 21.125ZM14.8954 18.8L14.1262 16.9538L13.0597 17.3982L12.9119 18.5441L14.8954 18.8ZM16.0704 18.125L16.8504 16.2834L15.8089 15.8422L14.8941 16.5075L16.0704 18.125ZM18.1954 19.025L17.4155 20.8666L17.4685 20.8891L17.5228 20.9085L18.1954 19.025ZM19.4704 18.6L21.1738 19.6482L21.1882 19.6248L21.2019 19.601L19.4704 18.6ZM21.3204 15.4L19.6171 14.3518L19.6027 14.3752L19.589 14.399L21.3204 15.4ZM21.0704 14.1L19.8602 15.6924L19.8704 15.7L21.0704 14.1ZM19.1954 12.675L17.2724 12.1256L16.8968 13.4401L17.9853 14.2673L19.1954 12.675ZM19.2204 11.325L18.0103 9.73268L17.0743 10.444L17.2405 11.6078L19.2204 11.325ZM21.0954 9.9L19.8954 8.29997L19.8853 8.30768L21.0954 9.9ZM21.3454 8.6L19.6106 9.59517L19.626 9.62193L19.6421 9.64819L21.3454 8.6ZM19.4954 5.375L21.2303 4.37983L21.2149 4.35307L21.1988 4.32681L19.4954 5.375ZM18.2454 4.975L17.5728 3.09152L17.5263 3.10811L17.4807 3.12697L18.2454 4.975ZM16.0704 5.875L14.8941 7.49247L15.8 8.15135L16.8351 7.72303L16.0704 5.875ZM14.8954 5.2L12.9119 5.45594L13.0645 6.63862L14.1775 7.06669L14.8954 5.2ZM14.5954 2.875L16.579 2.61905L16.5779 2.61067L14.5954 2.875ZM8.89544 2.875L6.91296 2.61067L6.91188 2.61906L8.89544 2.875ZM8.59544 5.2L9.36467 7.04615L10.4311 6.60179L10.579 5.45594L8.59544 5.2ZM7.42044 5.875L6.65573 7.72303L7.69083 8.15135L8.59678 7.49247L7.42044 5.875ZM5.24544 4.975L6.01014 3.12697L5.96456 3.10811L5.91811 3.09152L5.24544 4.975ZM3.99544 5.375L5.73027 6.37017L5.75872 6.32057L5.78429 6.26943L3.99544 5.375ZM2.14544 8.6L3.84875 9.64819L3.86492 9.62193L3.88027 9.59517L2.14544 8.6ZM2.39544 9.9L3.60563 8.30764L3.59544 8.3L2.39544 9.9ZM4.27044 11.325L6.25034 11.6078L6.4166 10.444L5.4806 9.73268L4.27044 11.325ZM4.27044 12.675L5.4806 14.2673L6.4166 13.556L6.25034 12.3922L4.27044 12.675ZM2.39544 14.1L3.59546 15.7L3.6056 15.6923L2.39544 14.1ZM2.14544 15.4L3.88027 14.4048L3.86492 14.3781L3.84875 14.3518L2.14544 15.4ZM3.99544 18.625L2.26061 19.6202L2.27596 19.6469L2.29212 19.6732L3.99544 18.625ZM5.24544 19.025L5.91811 20.9085L5.96456 20.8919L6.01014 20.873L5.24544 19.025ZM7.42044 18.125L8.59678 16.5075L7.69083 15.8487L6.65573 16.277L7.42044 18.125ZM8.59544 18.8L10.579 18.5441L10.4264 17.3614L9.3134 16.9333L8.59544 18.8ZM8.89544 21.125L6.91186 21.3809L6.91298 21.3893L8.89544 21.125ZM13.6204 20H9.8704V24H13.6204V20ZM12.9251 20.2701C13.0043 20.1981 13.1143 20.1239 13.2525 20.0708C13.3903 20.0178 13.519 20 13.6204 20V24C14.363 24 15.0606 23.7345 15.6158 23.2299L12.9251 20.2701ZM12.613 20.8607C12.6247 20.7729 12.6543 20.6624 12.7148 20.546C12.7755 20.4292 12.8517 20.3369 12.9251 20.2701L15.6158 23.2299C16.155 22.7397 16.4834 22.0978 16.5779 21.3893L12.613 20.8607ZM12.9119 18.5441L12.6119 20.8691L16.579 21.3809L16.879 19.0559L12.9119 18.5441ZM14.4877 16.7724C14.3593 16.8474 14.2388 16.9069 14.1262 16.9538L15.6647 20.6462C15.9521 20.5264 16.2316 20.386 16.5032 20.2276L14.4877 16.7724ZM14.8941 16.5075C14.7662 16.6005 14.6309 16.6889 14.4877 16.7724L16.5032 20.2276C16.76 20.0778 17.008 19.9161 17.2468 19.7425L14.8941 16.5075ZM18.9754 17.1834L16.8504 16.2834L15.2905 19.9666L17.4155 20.8666L18.9754 17.1834ZM18.3151 17.1274C18.3842 17.1059 18.4762 17.089 18.5836 17.0909C18.6916 17.0928 18.7889 17.1132 18.8681 17.1415L17.5228 20.9085C18.1732 21.1408 18.855 21.148 19.5007 20.9476L18.3151 17.1274ZM17.7671 17.5518C17.8169 17.4708 17.8937 17.3774 18.0019 17.2932C18.1103 17.2089 18.2212 17.1565 18.3151 17.1274L19.5007 20.9476C20.2074 20.7283 20.7883 20.2746 21.1738 19.6482L17.7671 17.5518ZM19.589 14.399L17.739 17.599L21.2019 19.601L23.0519 16.401L19.589 14.399ZM19.4843 15.0922C19.464 14.9906 19.4565 14.8586 19.4828 14.7109C19.5092 14.5632 19.5621 14.4412 19.6171 14.3518L23.0238 16.4482C23.4225 15.8002 23.5555 15.0521 23.4066 14.3078L19.4843 15.0922ZM19.8704 15.7C19.7852 15.6361 19.694 15.5438 19.6182 15.4225C19.5427 15.3017 19.5028 15.1847 19.4843 15.0922L23.4066 14.3078C23.2622 13.5858 22.8726 12.9516 22.2704 12.5L19.8704 15.7ZM17.9853 14.2673L19.8602 15.6924L22.2806 12.5077L20.4056 11.0827L17.9853 14.2673ZM17.2454 12.3375C17.2454 12.2393 17.2607 12.1665 17.2724 12.1256L21.1185 13.2244C21.1968 12.9502 21.2454 12.6524 21.2454 12.3375H17.2454ZM17.2454 11.6625V12.3375H21.2454V11.6625H17.2454ZM17.2405 11.6078C17.245 11.6389 17.2454 11.6566 17.2454 11.6625H21.2454C21.2454 11.4517 21.2292 11.2444 21.2003 11.0422L17.2405 11.6078ZM19.8853 8.30768L18.0103 9.73268L20.4306 12.9173L22.3056 11.4923L19.8853 8.30768ZM19.5093 8.90777C19.5278 8.81526 19.5677 8.69828 19.6432 8.5775C19.719 8.45616 19.8102 8.3639 19.8954 8.29997L22.2954 11.5C22.8976 11.0484 23.2872 10.4142 23.4316 9.69223L19.5093 8.90777ZM19.6421 9.64819C19.5871 9.5588 19.5342 9.43682 19.5078 9.28908C19.4815 9.14142 19.489 9.00936 19.5093 8.90777L23.4316 9.69223C23.5805 8.94794 23.4475 8.19983 23.0488 7.55181L19.6421 9.64819ZM17.7606 6.37017L19.6106 9.59517L23.0803 7.60483L21.2303 4.37983L17.7606 6.37017ZM18.396 6.87305C18.2804 6.84001 18.1537 6.78048 18.035 6.68882C17.9177 6.59818 17.8396 6.50037 17.7921 6.42319L21.1988 4.32681C20.8175 3.70724 20.2335 3.238 19.4949 3.02695L18.396 6.87305ZM18.9181 6.85848C18.8533 6.88163 18.7675 6.90138 18.6668 6.90498C18.5657 6.90859 18.473 6.89505 18.396 6.87305L19.4949 3.02695C18.8511 2.84301 18.1905 2.8709 17.5728 3.09152L18.9181 6.85848ZM16.8351 7.72303L19.0101 6.82303L17.4807 3.12697L15.3057 4.02697L16.8351 7.72303ZM14.468 7.2084C14.6125 7.29634 14.7545 7.39097 14.8941 7.49247L17.2468 4.25753C17.0197 4.09236 16.7867 3.93699 16.5478 3.7916L14.468 7.2084ZM14.1775 7.06669C14.2862 7.10849 14.3822 7.15615 14.468 7.2084L16.5478 3.7916C16.2503 3.61052 15.938 3.45817 15.6134 3.33331L14.1775 7.06669ZM12.6119 3.13094L12.9119 5.45594L16.879 4.94406L16.579 2.61905L12.6119 3.13094ZM12.9251 3.72988C12.8517 3.66314 12.7755 3.57076 12.7148 3.45395C12.6543 3.33761 12.6247 3.22709 12.613 3.13933L16.5779 2.61067C16.4834 1.90221 16.155 1.26032 15.6158 0.77012L12.9251 3.72988ZM13.6204 4C13.519 4 13.3903 3.98222 13.2525 3.92919C13.1143 3.87605 13.0043 3.80191 12.9251 3.72988L15.6158 0.77012C15.0606 0.265451 14.363 0 13.6204 0V4ZM9.8704 4H13.6204V0H9.8704V4ZM10.5658 3.72988C10.4865 3.80191 10.3766 3.87605 10.2384 3.92919C10.1005 3.98222 9.9719 4 9.8704 4V0C9.12787 0 8.43023 0.265451 7.87509 0.77012L10.5658 3.72988ZM10.8779 3.13933C10.8662 3.22709 10.8366 3.33762 10.7761 3.45396C10.7154 3.57076 10.6392 3.66314 10.5658 3.72988L7.87509 0.77012C7.33588 1.26032 7.00742 1.9022 6.91296 2.61067L10.8779 3.13933ZM10.579 5.45594L10.879 3.13094L6.91188 2.61906L6.61188 4.94406L10.579 5.45594ZM9.00318 7.22756C9.1316 7.15265 9.25209 7.09306 9.36467 7.04615L7.82621 3.35385C7.53878 3.47361 7.25928 3.61402 6.9877 3.77244L9.00318 7.22756ZM8.59678 7.49247C8.72465 7.39947 8.85996 7.3111 9.00318 7.22756L6.9877 3.77244C6.73092 3.92223 6.48289 4.08386 6.24409 4.25753L8.59678 7.49247ZM4.48073 6.82303L6.65573 7.72303L8.18514 4.02697L6.01014 3.12697L4.48073 6.82303ZM5.00222 6.88166C4.94371 6.89579 4.87006 6.90472 4.78719 6.90036C4.70427 6.896 4.63109 6.87931 4.57277 6.85848L5.91811 3.09152C5.31682 2.87677 4.6824 2.84398 4.06366 2.99334L5.00222 6.88166ZM5.78429 6.26943C5.73217 6.37367 5.6371 6.51376 5.47986 6.64175C5.32037 6.77156 5.14931 6.84616 5.00222 6.88166L4.06366 2.99334C3.21731 3.19763 2.572 3.74974 2.20658 4.48057L5.78429 6.26943ZM3.88027 9.59517L5.73027 6.37017L2.26061 4.37983L0.410609 7.60483L3.88027 9.59517ZM3.9816 8.90777C4.00192 9.00936 4.00941 9.14142 3.98304 9.28908C3.95666 9.43682 3.90377 9.5588 3.84875 9.64819L0.442121 7.55181C0.0433362 8.19983 -0.0895818 8.94794 0.0592762 9.69223L3.9816 8.90777ZM3.59544 8.3C3.68068 8.36393 3.77185 8.45616 3.84768 8.5775C3.92317 8.69828 3.9631 8.81525 3.9816 8.90777L0.0592762 9.69223C0.203672 10.4142 0.593266 11.0484 1.19544 11.5L3.59544 8.3ZM5.4806 9.73268L3.60563 8.30764L1.18527 11.4923L3.06027 12.9173L5.4806 9.73268ZM6.24544 11.6625C6.24544 11.6566 6.2459 11.6389 6.25034 11.6078L2.29054 11.0422C2.26164 11.2444 2.24544 11.4517 2.24544 11.6625H6.24544ZM6.24544 12.3375V11.6625H2.24544V12.3375H6.24544ZM6.25034 12.3922C6.2459 12.3611 6.24544 12.3434 6.24544 12.3375H2.24544C2.24544 12.5483 2.26164 12.7556 2.29054 12.9578L6.25034 12.3922ZM3.6056 15.6923L5.4806 14.2673L3.06027 11.0827L1.18527 12.5077L3.6056 15.6923ZM3.9816 15.0922C3.9631 15.1847 3.92317 15.3017 3.84768 15.4225C3.77185 15.5438 3.6807 15.6361 3.59546 15.7L1.19544 12.5C0.593266 12.9516 0.203672 13.5858 0.0592762 14.3078L3.9816 15.0922ZM3.84875 14.3518C3.90377 14.4412 3.95666 14.5632 3.98304 14.7109C4.00941 14.8586 4.00192 14.9906 3.9816 15.0922L0.0592762 14.3078C-0.0895818 15.0521 0.0433353 15.8002 0.442122 16.4482L3.84875 14.3518ZM5.73027 17.6298L3.88027 14.4048L0.410609 16.3952L2.26061 19.6202L5.73027 17.6298ZM5.09489 17.127C5.21053 17.16 5.33721 17.2195 5.45583 17.3112C5.57313 17.4018 5.65126 17.4996 5.69876 17.5768L2.29212 19.6732C2.6734 20.2928 3.25734 20.762 3.99599 20.973L5.09489 17.127ZM4.57276 17.1415C4.63756 17.1184 4.72334 17.0986 4.82405 17.095C4.92518 17.0914 5.01786 17.1049 5.09489 17.127L3.99599 20.973C4.63979 21.157 5.30038 21.1291 5.91811 20.9085L4.57276 17.1415ZM6.65573 16.277L4.48073 17.177L6.01014 20.873L8.18514 19.973L6.65573 16.277ZM9.02283 16.7916C8.87835 16.7037 8.73635 16.609 8.59678 16.5075L6.24409 19.7425C6.47119 19.9076 6.70419 20.063 6.94304 20.2084L9.02283 16.7916ZM9.3134 16.9333C9.20471 16.8915 9.10868 16.8439 9.02283 16.7916L6.94304 20.2084C7.24053 20.3895 7.55283 20.5418 7.87747 20.6667L9.3134 16.9333ZM10.879 20.8691L10.579 18.5441L6.61188 19.0559L6.91186 21.3809L10.879 20.8691ZM10.5658 20.2701C10.6392 20.3369 10.7154 20.4292 10.7761 20.546C10.8366 20.6624 10.8662 20.7729 10.8779 20.8607L6.91298 21.3893C7.00744 22.0978 7.33587 22.7397 7.87509 23.2299L10.5658 20.2701ZM9.8704 20C9.9719 20 10.1005 20.0178 10.2384 20.0708C10.3766 20.1239 10.4865 20.1981 10.5658 20.2701L7.87509 23.2299C8.43023 23.7345 9.12787 24 9.8704 24V20Z" fill="currentColor"></path></g></svg>
</file>

<file path="src/assets/delivered.svg">
<svg viewBox="0 0 18 18" height="18" width="18" preserveAspectRatio="xMidYMid meet" class="" version="1.1" x="0px" y="0px" enable-background="new 0 0 18 18"><title>status-dblcheck</title><path fill="currentColor" d="M17.394,5.035l-0.57-0.444c-0.188-0.147-0.462-0.113-0.609,0.076l-6.39,8.198 c-0.147,0.188-0.406,0.206-0.577,0.039l-0.427-0.388c-0.171-0.167-0.431-0.15-0.578,0.038L7.792,13.13 c-0.147,0.188-0.128,0.478,0.043,0.645l1.575,1.51c0.171,0.167,0.43,0.149,0.577-0.039l7.483-9.602 C17.616,5.456,17.582,5.182,17.394,5.035z M12.502,5.035l-0.57-0.444c-0.188-0.147-0.462-0.113-0.609,0.076l-6.39,8.198 c-0.147,0.188-0.406,0.206-0.577,0.039l-2.614-2.556c-0.171-0.167-0.447-0.164-0.614,0.007l-0.505,0.516 c-0.167,0.171-0.164,0.447,0.007,0.614l3.887,3.8c0.171,0.167,0.43,0.149,0.577-0.039l7.483-9.602 C12.724,5.456,12.69,5.182,12.502,5.035z"></path></svg>
</file>

<file path="src/assets/menu.svg">
<svg viewBox="0 0 24 24" height="24" width="24" preserveAspectRatio="xMidYMid meet" class="" version="1.1" x="0px" y="0px" enable-background="new 0 0 24 24"><title>menu</title><path fill="currentColor" d="M12,7c1.104,0,2-0.896,2-2c0-1.105-0.895-2-2-2c-1.104,0-2,0.894-2,2 C10,6.105,10.895,7,12,7z M12,9c-1.104,0-2,0.894-2,2c0,1.104,0.895,2,2,2c1.104,0,2-0.896,2-2C13.999,9.895,13.104,9,12,9z M12,15 c-1.104,0-2,0.894-2,2c0,1.104,0.895,2,2,2c1.104,0,2-0.896,2-2C13.999,15.894,13.104,15,12,15z"></path></svg>
</file>

<file path="src/assets/message.svg">
<svg viewBox="0 0 24 24" height="24" width="24" preserveAspectRatio="xMidYMid meet" class="" fill="none"><title>chats-filled</title><path fill-rule="evenodd" clip-rule="evenodd" d="M4.8384 8.45501L5 8.70356V9V17.8333C5 18.7538 5.7462 19.5 6.6667 19.5H20.3333C21.2538 19.5 22 18.7538 22 17.8333V6.66667C22 5.74619 21.2538 5 20.3333 5H2.5927L4.8384 8.45501ZM8 14.5C8 13.6716 8.67157 13 9.5 13H14.5C15.3284 13 16 13.6716 16 14.5C16 15.3284 15.3284 16 14.5 16H9.5C8.67157 16 8 15.3284 8 14.5ZM9.5 8C8.67157 8 8 8.67157 8 9.5C8 10.3284 8.67157 11 9.5 11H16.5C17.3284 11 18 10.3284 18 9.5C18 8.67157 17.3284 8 16.5 8H9.5Z" fill="currentColor"></path><path d="M5 8.70356L5.41919 8.43101L5.5 8.55531V8.70356H5ZM4.8384 8.45501L4.41921 8.72756L4.41917 8.7275L4.8384 8.45501ZM2.5927 5L2.17347 5.27249L1.67137 4.5H2.5927V5ZM4.58081 8.9761L4.41921 8.72756L5.25759 8.18247L5.41919 8.43101L4.58081 8.9761ZM4.5 9V8.70356H5.5V9H4.5ZM4.5 17.8333V9H5.5V17.8333H4.5ZM6.6667 20C5.47006 20 4.5 19.0299 4.5 17.8333H5.5C5.5 18.4777 6.02234 19 6.6667 19V20ZM20.3333 20H6.6667V19H20.3333V20ZM22.5 17.8333C22.5 19.0299 21.53 20 20.3333 20V19C20.9777 19 21.5 18.4777 21.5 17.8333H22.5ZM22.5 6.66667V17.8333H21.5V6.66667H22.5ZM20.3333 4.5C21.53 4.5 22.5 5.47005 22.5 6.66667H21.5C21.5 6.02233 20.9777 5.5 20.3333 5.5V4.5ZM2.5927 4.5H20.3333V5.5H2.5927V4.5ZM4.41917 8.7275L2.17347 5.27249L3.01192 4.72751L5.25762 8.18252L4.41917 8.7275ZM9.5 13.5C8.94772 13.5 8.5 13.9477 8.5 14.5H7.5C7.5 13.3954 8.39543 12.5 9.5 12.5V13.5ZM14.5 13.5H9.5V12.5H14.5V13.5ZM15.5 14.5C15.5 13.9477 15.0523 13.5 14.5 13.5V12.5C15.6046 12.5 16.5 13.3954 16.5 14.5H15.5ZM14.5 15.5C15.0523 15.5 15.5 15.0523 15.5 14.5H16.5C16.5 15.6046 15.6046 16.5 14.5 16.5V15.5ZM9.5 15.5H14.5V16.5H9.5V15.5ZM8.5 14.5C8.5 15.0523 8.94772 15.5 9.5 15.5V16.5C8.39543 16.5 7.5 15.6046 7.5 14.5H8.5ZM7.5 9.5C7.5 8.39543 8.39543 7.5 9.5 7.5V8.5C8.94772 8.5 8.5 8.94772 8.5 9.5H7.5ZM9.5 11.5C8.39543 11.5 7.5 10.6046 7.5 9.5H8.5C8.5 10.0523 8.94772 10.5 9.5 10.5V11.5ZM16.5 11.5H9.5V10.5H16.5V11.5ZM18.5 9.5C18.5 10.6046 17.6046 11.5 16.5 11.5V10.5C17.0523 10.5 17.5 10.0523 17.5 9.5H18.5ZM16.5 7.5C17.6046 7.5 18.5 8.39543 18.5 9.5H17.5C17.5 8.94772 17.0523 8.5 16.5 8.5V7.5ZM9.5 7.5H16.5V8.5H9.5V7.5Z" fill="currentColor"></path></svg>
</file>

<file path="src/assets/new-chat.svg">
<svg viewBox="0 0 24 24" height="24" width="24" preserveAspectRatio="xMidYMid meet" class="" fill="none"><title>new-chat-outline</title><path d="M9.53277 12.9911H11.5086V14.9671C11.5086 15.3999 11.7634 15.8175 12.1762 15.9488C12.8608 16.1661 13.4909 15.6613 13.4909 15.009V12.9911H15.4672C15.9005 12.9911 16.3181 12.7358 16.449 12.3226C16.6659 11.6381 16.1606 11.0089 15.5086 11.0089H13.4909V9.03332C13.4909 8.60007 13.2361 8.18252 12.8233 8.05119C12.1391 7.83391 11.5086 8.33872 11.5086 8.991V11.0089H9.49088C8.83941 11.0089 8.33411 11.6381 8.55097 12.3226C8.68144 12.7358 9.09947 12.9911 9.53277 12.9911Z" fill="currentColor"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M0.944298 5.52617L2.99998 8.84848V17.3333C2.99998 18.8061 4.19389 20 5.66665 20H19.3333C20.8061 20 22 18.8061 22 17.3333V6.66667C22 5.19391 20.8061 4 19.3333 4H1.79468C1.01126 4 0.532088 4.85997 0.944298 5.52617ZM4.99998 8.27977V17.3333C4.99998 17.7015 5.29845 18 5.66665 18H19.3333C19.7015 18 20 17.7015 20 17.3333V6.66667C20 6.29848 19.7015 6 19.3333 6H3.58937L4.99998 8.27977Z" fill="currentColor"></path></svg>
</file>

<file path="src/assets/pending.svg">
<svg viewBox="0 0 14 18" height="18" width="18" preserveAspectRatio="xMidYMid meet" class="" version="1.1" x="0px" y="0px" enable-background="new 0 0 14 18"><title>status-time</title><path fill="currentColor" d="M8.906,10.132h-1.64V7.569c0-0.3-0.243-0.545-0.545-0.545H6.619 c-0.3,0-0.545,0.243-0.545,0.545v3.21c0,0.3,0.243,0.545,0.545,0.545h0.102c0.001,0,0.002-0.001,0.003-0.001 s0.002,0.001,0.003,0.001h2.178c0.3,0,0.545-0.243,0.545-0.545v-0.102C9.451,10.376,9.206,10.132,8.906,10.132z M8.906,4.4H5.094 C3.112,4.4,1.5,6.012,1.5,7.994v3.812c0,1.982,1.612,3.594,3.594,3.594h3.812c1.982,0,3.594-1.612,3.594-3.594V7.994 C12.5,6.012,10.888,4.4,8.906,4.4z M11.084,11.806c0,1.203-0.975,2.178-2.178,2.178H5.094c-1.203,0-2.178-0.975-2.178-2.178V7.994 c0-1.203,0.975-2.178,2.178-2.178h3.812c1.203,0,2.178,0.975,2.178,2.178V11.806z"></path></svg>
</file>

<file path="src/assets/plus.svg">
<svg viewBox="0 0 24 24" width="30" preserveAspectRatio="xMidYMid meet" class="x11xpdln x1d8287x x1h4ghdb"><title>plus</title><path fill="currentColor" d="M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6V13z"></path></svg>
</file>

<file path="src/assets/search.svg">
<svg viewBox="0 0 24 24" height="24" width="24" preserveAspectRatio="xMidYMid meet" class="" version="1.1" x="0px" y="0px" enable-background="new 0 0 24 24"><title>search</title><path fill="currentColor" d="M15.009,13.805h-0.636l-0.22-0.219c0.781-0.911,1.256-2.092,1.256-3.386 c0-2.876-2.332-5.207-5.207-5.207c-2.876,0-5.208,2.331-5.208,5.207s2.331,5.208,5.208,5.208c1.293,0,2.474-0.474,3.385-1.255 l0.221,0.22v0.635l4.004,3.999l1.194-1.195L15.009,13.805z M10.201,13.805c-1.991,0-3.605-1.614-3.605-3.605 s1.614-3.605,3.605-3.605s3.605,1.614,3.605,3.605S12.192,13.805,10.201,13.805z"></path></svg>
</file>

<file path="src/assets/send.svg">
<svg viewBox="0 0 24 24" height="24" width="24" preserveAspectRatio="xMidYMid meet" class="" version="1.1" x="0px" y="0px" enable-background="new 0 0 24 24"><title>send</title><path fill="currentColor" d="M1.101,21.757L23.8,12.028L1.101,2.3l0.011,7.912l13.623,1.816L1.112,13.845 L1.101,21.757z"></path></svg>
</file>

<file path="src/assets/sent.svg">
<svg viewBox="0 0 12 11" height="11" width="16" preserveAspectRatio="xMidYMid meet" class="" fill="none"><title>msg-check</title><path d="M11.1549 0.652832C11.0745 0.585124 10.9729 0.55127 10.8502 0.55127C10.7021 0.55127 10.5751 0.610514 10.4693 0.729004L4.28038 8.36523L1.87461 6.09277C1.8323 6.04622 1.78151 6.01025 1.72227 5.98486C1.66303 5.95947 1.60166 5.94678 1.53819 5.94678C1.407 5.94678 1.29275 5.99544 1.19541 6.09277L0.884379 6.40381C0.79128 6.49268 0.744731 6.60482 0.744731 6.74023C0.744731 6.87565 0.79128 6.98991 0.884379 7.08301L3.88047 10.0791C4.02859 10.2145 4.19574 10.2822 4.38194 10.2822C4.48773 10.2822 4.58929 10.259 4.68663 10.2124C4.78396 10.1659 4.86436 10.1003 4.92784 10.0156L11.5738 1.59863C11.6458 1.5013 11.6817 1.40186 11.6817 1.30029C11.6817 1.14372 11.6183 1.01888 11.4913 0.925781L11.1549 0.652832Z" fill="currentcolor"></path></svg>
</file>

<file path="src/assets/status.svg">
<svg viewBox="0 0 24 24" height="24" width="24" preserveAspectRatio="xMidYMid meet" class="" fill="none"><title>status-outline</title><path d="M13.5627 3.13663C13.6586 2.59273 14.1793 2.22466 14.7109 2.37438C15.7904 2.67842 16.8134 3.16256 17.7359 3.80858C18.9322 4.64624 19.9304 5.73574 20.6605 7.0005C21.3906 8.26526 21.8348 9.67457 21.9619 11.1294C22.06 12.2513 21.9676 13.3794 21.691 14.4662C21.5548 15.0014 20.9756 15.2682 20.4567 15.0793C19.9377 14.8903 19.6769 14.317 19.7996 13.7785C19.9842 12.9693 20.0421 12.1343 19.9695 11.3035C19.8678 10.1396 19.5124 9.01218 18.9284 8.00038C18.3443 6.98857 17.5457 6.11697 16.5887 5.44684C15.9055 4.96844 15.1535 4.601 14.3605 4.3561C13.8328 4.19314 13.4668 3.68052 13.5627 3.13663Z" fill="currentColor"></path><path d="M18.8943 17.785C19.3174 18.14 19.3758 18.7749 18.9803 19.1604C18.1773 19.9433 17.2465 20.5872 16.2257 21.0631C14.9022 21.6802 13.4595 22 11.9992 21.9999C10.5388 21.9998 9.09621 21.6798 7.77275 21.0625C6.75208 20.5865 5.82137 19.9424 5.01843 19.1595C4.62302 18.7739 4.68155 18.139 5.10467 17.784C5.52779 17.4291 6.15471 17.4898 6.55964 17.8654C7.16816 18.4298 7.86233 18.8974 8.61817 19.25C9.67695 19.7438 10.831 19.9998 11.9993 19.9999C13.1676 20 14.3217 19.7442 15.3806 19.2505C16.1365 18.898 16.8307 18.4304 17.4393 17.8661C17.8443 17.4906 18.4712 17.43 18.8943 17.785Z" fill="currentColor"></path><path d="M3.54265 15.0781C3.02367 15.267 2.44458 15.0001 2.30844 14.4649C2.03202 13.3781 1.93978 12.2502 2.03794 11.1283C2.16521 9.67361 2.60953 8.26444 3.33966 6.99984C4.06979 5.73523 5.06802 4.64587 6.2642 3.80832C7.18668 3.1624 8.20962 2.67833 9.28902 2.37434C9.82063 2.22462 10.3413 2.59271 10.4372 3.1366C10.5331 3.6805 10.1671 4.19311 9.63938 4.35607C8.84645 4.60094 8.09446 4.96831 7.41133 5.44663C6.45439 6.11667 5.65581 6.98816 5.0717 7.99985C4.4876 9.01153 4.13214 10.1389 4.03032 11.3026C3.95764 12.1334 4.01547 12.9683 4.19986 13.7775C4.32257 14.3159 4.06162 14.8892 3.54265 15.0781Z" fill="currentColor"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M11.9999 16C14.2091 16 15.9999 14.2092 15.9999 12C15.9999 9.79088 14.2091 8.00002 11.9999 8.00002C9.7908 8.00002 7.99994 9.79088 7.99994 12C7.99994 14.2092 9.7908 16 11.9999 16ZM11.9999 18C15.3136 18 17.9999 15.3137 17.9999 12C17.9999 8.68631 15.3136 6.00002 11.9999 6.00002C8.68623 6.00002 5.99994 8.68631 5.99994 12C5.99994 15.3137 8.68623 18 11.9999 18Z" fill="currentColor"></path></svg>
</file>

<file path="src/assets/user.svg">
<svg viewBox="0 0 212 212" height="212" width="212" preserveAspectRatio="xMidYMid meet" class="xh8yej3 x5yr21d" version="1.1" x="0px" y="0px" enable-background="new 0 0 212 212"><title>default-user</title><path fill="#DFE5E7" d="M106.251,0.5C164.653,0.5,212,47.846,212,106.25S164.653,212,106.25,212C47.846,212,0.5,164.654,0.5,106.25 S47.846,0.5,106.251,0.5z" class="xl21vc0"></path><g><path fill="#FFFFFF" d="M173.561,171.615c-0.601-0.915-1.287-1.907-2.065-2.955c-0.777-1.049-1.645-2.155-2.608-3.299 c-0.964-1.144-2.024-2.326-3.184-3.527c-1.741-1.802-3.71-3.646-5.924-5.47c-2.952-2.431-6.339-4.824-10.204-7.026 c-1.877-1.07-3.873-2.092-5.98-3.055c-0.062-0.028-0.118-0.059-0.18-0.087c-9.792-4.44-22.106-7.529-37.416-7.529 s-27.624,3.089-37.416,7.529c-0.338,0.153-0.653,0.318-0.985,0.474c-1.431,0.674-2.806,1.376-4.128,2.101 c-0.716,0.393-1.417,0.792-2.101,1.197c-3.421,2.027-6.475,4.191-9.15,6.395c-2.213,1.823-4.182,3.668-5.924,5.47 c-1.161,1.201-2.22,2.384-3.184,3.527c-0.964,1.144-1.832,2.25-2.609,3.299c-0.778,1.049-1.464,2.04-2.065,2.955 c-0.557,0.848-1.033,1.622-1.447,2.324c-0.033,0.056-0.073,0.119-0.104,0.174c-0.435,0.744-0.79,1.392-1.07,1.926 c-0.559,1.068-0.818,1.678-0.818,1.678v0.398c18.285,17.927,43.322,28.985,70.945,28.985c27.678,0,52.761-11.103,71.055-29.095 v-0.289c0,0-0.619-1.45-1.992-3.778C174.594,173.238,174.117,172.463,173.561,171.615z" class="x1d6ck0k"></path><path fill="#FFFFFF" d="M106.002,125.5c2.645,0,5.212-0.253,7.68-0.737c1.234-0.242,2.443-0.542,3.624-0.896 c1.772-0.532,3.482-1.188,5.12-1.958c2.184-1.027,4.242-2.258,6.15-3.67c2.863-2.119,5.39-4.646,7.509-7.509 c0.706-0.954,1.367-1.945,1.98-2.971c0.919-1.539,1.729-3.155,2.422-4.84c0.462-1.123,0.872-2.277,1.226-3.458 c0.177-0.591,0.341-1.188,0.49-1.792c0.299-1.208,0.542-2.443,0.725-3.701c0.275-1.887,0.417-3.827,0.417-5.811 c0-1.984-0.142-3.925-0.417-5.811c-0.184-1.258-0.426-2.493-0.725-3.701c-0.15-0.604-0.313-1.202-0.49-1.793 c-0.354-1.181-0.764-2.335-1.226-3.458c-0.693-1.685-1.504-3.301-2.422-4.84c-0.613-1.026-1.274-2.017-1.98-2.971 c-2.119-2.863-4.646-5.39-7.509-7.509c-1.909-1.412-3.966-2.643-6.15-3.67c-1.638-0.77-3.348-1.426-5.12-1.958 c-1.181-0.355-2.39-0.655-3.624-0.896c-2.468-0.484-5.035-0.737-7.68-0.737c-21.162,0-37.345,16.183-37.345,37.345 C68.657,109.317,84.84,125.5,106.002,125.5z" class="x1d6ck0k"></path></g></svg>
</file>

<file path="src/components/IconButton.tsx">
const IconButton = ({
  index,
  Icon,
  isSelected,
  disabled,
  width,
  height,
  onClick,
  tooltipText = "",
  ref,
}: {
  index: number;
  Icon: React.FC<React.SVGProps<SVGSVGElement>>;
  isSelected?: boolean;
  disabled: boolean;
  width?: string;
  height?: string;
  onClick: (index: number) => void;
  tooltipText?: string;
  ref?: React.RefObject<HTMLDivElement | null>;
}) => (
  <div className="group relative" ref={ref}>
    <button
      type="button"
      disabled={disabled}
      onClick={() => !disabled && onClick(index)}
      className={`w-10 h-10 flex items-center justify-center
            transition-all duration-200 ${
              disabled ? "opacity-50 cursor-not-allowed" : "cursor-pointer"
            } ${isSelected ? "bg-neutral-50 rounded-full" : ""}`}
    >
      <Icon
        className={`${width || "w-6"} ${height || "h-6"} ${
          disabled ? "text-neutral-400" : ""
        }`}
      />
    </button>

    {!disabled && tooltipText && (
      <div
        className="absolute left-full top-1/2 -translate-y-1/2 ml-2
              opacity-0 group-hover:opacity-100 transition-opacity duration-200
              px-3 py-1.5 bg-white text-neutral-600 text-xs font-medium
              rounded-2xl shadow-lg whitespace-nowrap pointer-events-none"
      >
        {tooltipText}
      </div>
    )}
  </div>
);

export default IconButton;
</file>

<file path="src/index.css">
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@100;200;300;400;500;600;700&display=swap");
@import "tailwindcss";
@config "../tailwind.config.cjs";

.scroll-area::-webkit-scrollbar {
  width: 10px;
}

.scroll-area::-webkit-scrollbar-track {
  background: transparent;
}

.scroll-area::-webkit-scrollbar-thumb {
  background: theme("colors.primary.100");
  border-radius: 4px;
}

.scroll-area::-webkit-scrollbar-button:single-button {
  background-repeat: no-repeat;
  background-position: center;
  height: 12px;
  width: 12px;
}

.scroll-area::-webkit-scrollbar-button:single-button:vertical:decrement {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8' fill='none'><path d='M4 3L6.5 5.5L1.5 5.5L4 3Z' fill='%23AEBAC1'/></svg>");
}

.scroll-area::-webkit-scrollbar-button:single-button:vertical:increment {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8' fill='none'><path d='M4 5L1.5 2.5L6.5 2.5L4 5Z' fill='%23AEBAC1'/></svg>");
}

.rotate-45 {
  transform: rotate(45deg);
}
.-rotate-45 {
  transform: rotate(-45deg);
}
</file>

<file path="src/layouts/Chat/Bottom.tsx">
import SendIcon from "@assets/send.svg?react";
import PlusIcon from "@assets/plus.svg?react";
import { useEffect } from "react";

interface BottomProps {
  inputRef: React.RefObject<HTMLInputElement | null>,
  sendMessage: () => void
}

function Bottom({ inputRef, sendMessage }: BottomProps) {
  useEffect(() => {
    const handleKeyDown = (event: KeyboardEvent) => {
      if (!inputRef.current) return;

      if ((event.key === "Enter" || event.code === "NumpadEnter") && inputRef.current.value.trim() !== "") {
        event.preventDefault();
        sendMessage();
      }
    }

    document.addEventListener("keydown", handleKeyDown)

    return () => {
      document.removeEventListener("keydown", handleKeyDown)
    }
  }, [inputRef, sendMessage])

  return (
      <div className="bg-primary-100 py-3 flex items-center gap-4 text-white px-4">
        <PlusIcon className="text-neutral-200" />
        <input
          ref={inputRef}
          type="text"
          placeholder="Digite sua mensagem..."
          className="w-full p-2 rounded-lg focus:outline-none bg-primary-200 placeholder-gray-500 focus:placeholder-transparent"
        />
        <SendIcon className="text-neutral-200" onClick={sendMessage}/>
      </div>
  )
}

export default Bottom
</file>

<file path="src/layouts/Chat/Header.tsx">
import UserIcon from "@assets/user.svg?react";
import SearchIcon from "@assets/search.svg?react";
import MenuIcon from "@assets/menu.svg?react";

function Header({ className }: { className: string }) {
  return (
    <div
      className={`z-10 w-full h-16 bg-primary-100 px-4 py-2.5 flex items-center justify-between text-neutral-400 ${className}`}
    >
      <div className="flex  items-center gap-4">
        <UserIcon width={40} height={40} />
        <h1 className="font-semibold flex-col">Nathália Dominice</h1>
      </div>
      <div className="flex items-center gap-6 text-neutral-100">
        <SearchIcon width={30} height={30} />
        <MenuIcon width={24} height={24} />
      </div>
    </div>
  );
}

export default Header;
</file>

<file path="src/layouts/Chat/index.tsx">
import { useRef } from "react";
import Bottom from "./Bottom";
import Header from "./Header";

import ScrollArea from "./ScrollArea";

const messages = [
  {
    id: 1,
    text: "Olá, tudo bem?",
    sendId: 2,
    timestamp: "15:05",
    status: "read",
  },
  {
    id: 2,
    text: "Tudo ótimo, e você?",
    sendId: 1,
    timestamp: "15:05",
    status: "read",
  },
  {
    id: 3,
    text: "Estou bem também!",
    sendId: 2,
    timestamp: "15:07",
    status: "delivered",
  },
  {
    id: 4,
    text: "Que bom! O que vai fazer hoje?",
    sendId: 2,
    timestamp: "15:09",
    status: "delivered",
  },
  {
    id: 5,
    text: "Vou trabalhar e estudar React.",
    sendId: 1,
    timestamp: "15:10",
    status: "sent",
  },
  {
    id: 6,
    text: "Legal! Depois me conta como foi.",
    sendId: 2,
    timestamp: "15:10",
    status: "sent",
  },
  {
    id: 7,
    text: "Pode deixar",
    sendId: 1,
    timestamp: "15:10",
    status: "pending",
  },
];

function Chat() {
  const inputRef = useRef<HTMLInputElement | null>(null);

  const sendMessage = () => {
    if (!inputRef.current) return;

    const message = inputRef.current.value.trim();
    if (message === "") return;

    console.log(message)

    inputRef.current.value = "";
  };

  return (
    <div className="relative w-full h-full bg-primary-300 flex flex-col">
      <Header className="relative z-10" />
      <ScrollArea messages={messages}/>
      <Bottom inputRef={inputRef} sendMessage={sendMessage} />
    </div>
  );
}

export default Chat;
</file>

<file path="src/layouts/Chat/Message.tsx">
import type { Message } from "@types/message"
import PendingIcon from "@assets/pending.svg?react";
import SentIcon from "@assets/sent.svg?react";
import DeliveredIcon from "@assets/delivered.svg?react";

function Message({
    message,
  }: Message) {
    return (
      <div
        className={`max-w-xs p-2 rounded-lg flex flex-col ${
          message.sendId === 1
            ? "bg-secondary-100 text-white self-end"
            : "bg-primary-100 text-white self-start"
        }`}
      >
        <p className="break-words">{message.text}</p>
  
        <div className="flex justify-end items-center gap-1 mt-1">
          <span className="text-xs opacity-80">{message.timestamp}</span>
  
          {message.status === "pending" ? (
            <PendingIcon className="w-3 h-3 fill-current" />
          ) : message.status === "sent" ? (
            <SentIcon className="w-3 h-3 fill-current" />
          ) : message.status === "delivered" ? (
            <DeliveredIcon className="w-3 h-3 fill-current" />
          ) : (
            <DeliveredIcon className="w-3 h-3 fill-current text-blue-400" />
          )}
        </div>
      </div>
    );
  }

export default Message
</file>

<file path="src/layouts/Chat/ScrollArea.tsx">
import type { IMessage } from "@types/message";
import Message from './message'
import chatBg from "@assets/chat-bg.png";


function ScrollArea({ messages }: { messages: IMessage[]}) {
    return (
        <div className="relative flex-1 min-h-0 overflow-hidden">
        <div
          className="absolute inset-0 bg-repeat bg-center opacity-5"
          style={{ backgroundImage: `url(${chatBg})` }}
        ></div>
        <div className="scroll-area relative z-10 flex flex-col p-4 space-y-2 h-full overflow-y-auto">
          {messages.map((msg) => (
            <Message key={msg.id} message={msg} />
          ))}
        </div>
      </div>
    )
}

export default ScrollArea;
</file>

<file path="src/layouts/Contacts/Header.tsx">
import { useEffect, useRef, useState } from "react";
import NewChatIcon from "@assets/new-chat.svg?react";
import MenuIcon from "@assets/menu.svg?react";
import IconButton from "@components/IconButton";

const allIcons = [
  {
    icon: NewChatIcon,
    disabled: false,
  },
  {
    icon: MenuIcon,
    disabled: false,
  },
];

function Header() {
  const [selected, setSelected] = useState<number | null>(null);
  const containerRef = useRef<HTMLDivElement>(null);

  const handleSelect = (index: number) => setSelected(index);

  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (
        containerRef.current &&
        !containerRef.current.contains(event.target as Node)
      ) {
        setSelected(null);
      }
    };

    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  return (
    <header className="flex items-center h-16">
      <div className="flex items-center justify-between w-full">
        <h1 className="text-[22px] font-bold text-white">Conversas</h1>

        <div className="flex items-center gap-5">
          {allIcons.map(({ icon, disabled }, index) => (
            <IconButton
              key={index}
              index={index}
              Icon={icon}
              disabled={disabled}
              isSelected={selected === index}
              onClick={handleSelect}
              ref={containerRef}
            />
          ))}
        </div>
      </div>
    </header>
  );
}

export default Header;
</file>

<file path="src/layouts/Contacts/index.tsx">
import Header from "./Header";
import List from "./List";

function Contacts() {
  return (
    <div className="flex-shrink-0 flex-grow-0 basis-[30%] bg-neutral-700 text-neutral-100 px-4 flex flex-col h-full">
      <Header />
      <List />
    </div>
  );
}

export default Contacts;
</file>

<file path="src/layouts/Contacts/List.tsx">
import ListHeader from "./ListHeader";
import ScrollArea from "./ScrollArea";

function List() {
  return (
    <div className="flex-1">
      <ListHeader />
      <ScrollArea />
    </div>
  );
}

export default List;
</file>

<file path="src/layouts/Contacts/ListHeader.tsx">
import { useRef, useEffect } from "react";
import IconButton from "@components/IconButton";
import SearchIcon from "@assets/search.svg?react";

function ListHeader() {
  const containerRef = useRef<HTMLDivElement>(null);
  const inputRef = useRef<HTMLInputElement>(null);

  const handleIconClick = () => {
    inputRef.current?.focus();
  };

  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (
        containerRef.current &&
        !containerRef.current.contains(event.target as Node)
      ) {
        inputRef.current?.blur();
      }
    };

    document.addEventListener("mousedown", handleClickOutside);
    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, []);

  return (
    <div ref={containerRef}>
      <div className="flex items-center gap-6 w-full bg-primary-100 h-9 rounded-md mt-2 px-2">
        <IconButton
          key={0}
          index={0}
          Icon={SearchIcon}
          disabled={false}
          isSelected={false}
          width={"24"}
          height={"24"}
          onClick={handleIconClick}
        />
        <input
          ref={inputRef}
          type="text"
          placeholder="Pesquisar"
          aria-label="Campo de pesquisa"
          className="w-full bg-transparent border-none outline-none placeholder-gray-500 focus:placeholder-transparent focus:ring-0 focus:outline-none"
        />
      </div>
    </div>
  );
}

export default ListHeader;
</file>

<file path="src/layouts/Contacts/ScrollArea.tsx">
import React, { useState } from "react";
import UserIcon from "@assets/user.svg?react";
import PendingIcon from "@assets/pending.svg?react";
import SentIcon from "@assets/sent.svg?react";
import DeliveredIcon from "@assets/delivered.svg?react";

const messageStatus = {
  pending: PendingIcon,
  sent: SentIcon,
  delivered: DeliveredIcon,
};

type StatusType = keyof typeof messageStatus;

interface Contact {
  id: number;
  name: string;
  message: string;
  date: string;
  avatar?: string;
  status?: StatusType;
}

const contacts: Contact[] = [
  {
    id: 1,
    name: "Alice Santos",
    message: "Oi, tudo bem?",
    date: "14:30",
    avatar: "https://i.pravatar.cc/1000?img=1",
    status: "pending",
  },
  {
    id: 2,
    name: "Bruno Lima",
    message: "Enviado o relatório!",
    date: "Ontem",
    status: "sent",
  },
  {
    id: 3,
    name: "Carlos Oliveira",
    message: "Vamos marcar a reunião?",
    date: "Segunda-feira",
    avatar: "https://i.pravatar.cc/1000?img=3",
    status: "delivered",
  },
];

function ScrollArea() {
  const [selectedContact, setSelectedContact] = useState<number | null>(null);

  return (
    <div className="scroll-area flex flex-col gap-[0.75px] w-full h-[calc(100vh-160px)] overflow-y-auto mt-2">
      {contacts.length ? (
        contacts.map((contact: Contact) => (
          <div
            key={contact.id}
            className={`flex items-center gap-3 pl-3 cursor-pointer 
            transition-all duration-100 ease-in
            ${
              selectedContact === contact.id
                ? "bg-primary-50 opacity-100"
                : "hover:bg-primary-100 opacity-90 hover:opacity-100"
            }`}
            onClick={() => setSelectedContact(contact.id)}
          >
            <div className="">
              {contact.avatar ? (
                <img
                  src={contact.avatar}
                  alt={contact.name}
                  className="w-12 h-12 rounded-full"
                />
              ) : (
                <UserIcon className="w-12 h-12 rounded-full" />
              )}
            </div>

            <div className="flex-1 border-y-[0.2px] border-primary-100 py-3 pr-3">
              <div className="flex justify-between">
                <span className="font-semibold">{contact.name}</span>
                <span className="text-sm text-gray-500">{contact.date}</span>
              </div>

              <div className="flex items-center gap-1">
                <span className="">
                  {React.createElement(
                    messageStatus[contact.status as keyof typeof messageStatus]
                  )}
                </span>
                <p className="text-gray-600 text-sm truncate">
                  {contact.message}
                </p>
              </div>
            </div>
          </div>
        ))
      ) : (
        <div className="pl-[50px] py-[72px]">
          <p className="text-sm text-neutral-50">
            Nenhuma conversa, contato ou mensagem encontrada
          </p>
        </div>
      )}
    </div>
  );
}

export default ScrollArea;
</file>

<file path="src/layouts/Header.tsx">
import { useState } from "react";
import MessageIcon from "../assets/message.svg?react";
import StatusIcon from "../assets/status.svg?react";
import ChannelsIcon from "../assets/channels.svg?react";
import CommunitiesIcon from "../assets/communities.svg?react";
import ConfigIcon from "../assets/config.svg?react";
import UserIcon from "../assets/user.svg?react";
import IconButton from "../components/IconButton";

const allIcons = [
  {
    icon: MessageIcon,
    disabled: false,
    tooltip: "Conversas",
  },
  {
    icon: StatusIcon,
    disabled: true,
    tooltip: "Status",
  },
  {
    icon: ChannelsIcon,
    disabled: true,
    tooltip: "Canais",
  },
  {
    icon: CommunitiesIcon,
    disabled: true,
    tooltip: "Comunidades",
  },
  {
    icon: ConfigIcon,
    disabled: false,
    tooltip: "Configurações",
  },
  {
    icon: UserIcon,
    disabled: false,
    width: "w-8",
    height: "h-8",
    tooltip: "Perfil",
  },
];

function Header() {
  const [selected, setSelected] = useState<number>(0);

  const topIcons = allIcons.slice(0, -2);
  const bottomIcons = allIcons.slice(-2);

  const handleSelect = (index: number) => setSelected(index);

  return (
    <header className="w-16 h-full px-3 bg-primary-100 text-neutral-100 border-r-2 border-primary-50">
      <div className="flex flex-col items-center h-full justify-between py-2.5">
        <div className="flex flex-col items-center gap-2.5">
          {topIcons.map(({ icon, disabled, width, height, tooltip }, index) => (
            <IconButton
              key={index}
              index={index}
              Icon={icon}
              disabled={disabled}
              width={width}
              height={height}
              tooltipText={tooltip}
              isSelected={selected === index}
              onClick={handleSelect}
            />
          ))}
        </div>

        <div className="flex flex-col items-center gap-2.5 h-">
          {bottomIcons.map(
            ({ icon, disabled, width, height, tooltip }, index) => {
              const originalIndex = allIcons.length - 2 + index;
              return (
                <IconButton
                  key={originalIndex}
                  index={originalIndex}
                  Icon={icon}
                  disabled={disabled}
                  width={width}
                  height={height}
                  tooltipText={tooltip}
                  isSelected={selected === originalIndex}
                  onClick={handleSelect}
                />
              );
            }
          )}
        </div>
      </div>
    </header>
  );
}

export default Header;
</file>

<file path="src/main.tsx">
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.tsx'

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>,
)
</file>

<file path="src/types/contact.ts">
type IContact =   {
    id: number,
    name: string,
    message: string,
    date: string,
    avatar?: string,
}
</file>

<file path="src/types/message.ts">
import PendingIcon from "@assets/pending.svg?react";
import SentIcon from "@assets/sent.svg?react";
import DeliveredIcon from "@assets/delivered.svg?react";

const messageStatus = {
    pending: PendingIcon,
    sent: SentIcon,
    delivered: DeliveredIcon,
};
  
type StatusType = keyof typeof messageStatus;

export type IMessage = {
    id: number;
    text: string;
    sendId: number;
    timestamp: string;
    status: StatusType;
}
</file>

<file path="src/types/svg.d.ts">
declare module "*.svg?react" {
  import * as React from "react";
  const ReactComponent: React.FC<React.SVGProps<SVGSVGElement>>;
  export default ReactComponent;
}

declare module "*.svg" {
  const content: string;
  export default content;
}
</file>

<file path="src/vite-env.d.ts">
/// <reference types="vite/client" />
</file>

<file path="tailwind.config.cjs">
// tailwind.config.cjs
module.exports = {
  theme: {
    extend: {
      fontFamily: {
        system: ["system-ui", "sans-serif"],
      },
      colors: {
        // Cores principais do WhatsApp
        primary: {
          50: "#2F3B43", // Verde claro (para fundos de mensagens)
          100: "#202C33", // Verde principal do WhatsApp
          200: "#2F3B43", // Verde escuro (hover/estações)
          300: "#0B141A", // Verde muito escuro (cabeçalhos)
        },
        secondary: {
          50: "#34B7F1", // Azul claro (links/ícones)
          100: "#005C4B", // Azul-verde (destaques)
        },
        // Neutros e base
        neutral: {
          50: "#374248",
          100: "#AEBAC1", // Branco puro
          200: "#8696a0", // Fundo claro
          300: "#f0f2f5", // Bordas claras
          400: "#e9edef", // Fundo de input
          500: "#667781", // Texto secundário
          600: "#3b4a54", // Texto principal
          700: "#111b21", // Cabeçalhos escuros
        },
        white: "#e9edef",
        background: "#262524",
        // Estados e extras
        success: "#25D366", // Verde de confirmação
        warning: "#FFD700", // Amarelo para avisos
        error: "#FF3B30", // Vermelho para erros
        info: "#34B7F1", // Azul para informações
      },
    },
  },
};
</file>

<file path="tsconfig.app.json">
{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true,

    /* Paths */
    "baseUrl": "src",
    "paths": {
      "@components/*": ["components/*"],
      "@layouts/*": ["layouts/*"],
      "@pages/*": ["pages/*"],
      "@assets/*": ["assets/*"],
      "@hooks/*": ["hooks/*"],
      "@types/*": ["types/*"],
      "@utils/*": ["utils/*"],
      "@contexts/*": ["contexts/*"],
      "@api/*": ["api/*"]
    }
  },
  "include": ["src"]
}
</file>

<file path="tsconfig.json">
{
  "files": [],
  "references": [
    { "path": "./tsconfig.app.json" },
    { "path": "./tsconfig.node.json" }
  ]
}
</file>

<file path="tsconfig.node.json">
{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
    "target": "ES2022",
    "lib": ["ES2023"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["vite.config.ts"]
}
</file>

<file path="vite.config.ts">
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react-swc";
import tailwindcss from "@tailwindcss/vite";
import svgr from "vite-plugin-svgr";
import tsconfigPaths from "vite-tsconfig-paths";

// https://vite.dev/config/
export default defineConfig({
  plugins: [tailwindcss(), react(), svgr(), tsconfigPaths()],
});
</file>

</files>
